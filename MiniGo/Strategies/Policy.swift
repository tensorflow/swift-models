// Copyright 2019 The TensorFlow Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/// Holds the next move generated by a `Policy`.
public enum Move: Equatable, Hashable {
    case pass
    case place(position: Position)
}

/// The strategy for playing a game.
///
/// Policy is not thread safe and should be used for one game only.
public protocol Policy {

    /// The name of the game participant.
    var participantName: String { get }

    /// Returns the next move for the current `BoardState` after previous move.
    /// The previous move is nil if the game just starts.
    func nextMove(for boardState: BoardState, after previousMove: Move?) -> Move
}
